SELECT title, description FROM film;
SELECT * FROM film WHERE length < 60 OR length > 75;
SELECT * FROM film WHERE rantel_rate = 0.99 AND replacement_cost = 12.99 OR replacement_cost = 28.99;
SELECT last_name FROM customer WHERE first_name="MARY";
SELECT * FROM film WHERE length<50 AND (rental_rate!=2.99 OR rental_rate!=4.99);

SELECT * FROM film WHERE replacement_cost BETWEEN 12.99 AND 16.99;
SELECT first_name, last_name FROM actor WHERE first_name IN ('Penelope','Nick','Ed');
SELECT * FROM film WHERE rental_rate IN(0.99,2.99,4.99) AND replacement_cost IN(12.99,15.99,28.99);

SELECT country FROM country WHERE country LIKE 'A%a';
SELECT country FROM country WHERE country LIKE '_____\n';
SELECT title FROM film WHERE title '%t%t%t%t';
SELECT * FROM film WHERE title 'C%' AND length >90 AND rental_rate = 2.99;

SELECT DISTINCT replacement_cost FROM film;
SELECT COUNT(DISTINCT replacement_cost) FROM film;
SELECT COUNT(*) FROM film WHERE title LIKE 'T%' AND rating = 'G';
SELECT COUNT(*) FROM country WHERE country LIKE '_____';
SELECT COUNT(*) FROM city WHERE city ILIKE '%R';

SELECT * FROM film WHERE title LIKE '%n' ORDER BY DESC lenght LIMIT 5;
SELECT * FROM film WHERE title LIKE '%n' ORDER BY ASC lenght OFFSET 5 LIMIT 5;
SELECT * FROM customer WHERE store_id = 1 ORDER BY last_name LIMIT 1;

SELECT AVG(rental_rate) FROM film;
SELECT COUNT(title) FROM film WHERE title LIKE 'C%';
SELECT MAX(length) FROM film WHERE rental_rate = 0.99;
SELECT COUNT(DISTINCT replacement_cost) FROM film WHERE length > 150;

SELECT rating FROM film GROUP BY rating;
SELECT replacement_cost, COUNT(*) FROM film GROUP BY replacement_cost HAVING COUNT(*) > 50;
SELECT store_id, COUNT(*) FROM customer GROUP BY store_id;
SELECT country_id, MAX(COUNT(*)) FROM customer GROUP BY country_id;

CREATE TABLE employee (id INTEGER, name VARCHAR(50), birthday DATE, email VARCHAR(100));
INSERT INTO employee (id, name, birthday, email) values (1, 'Yuri', '2019-06-29', 'ysilkstone0@live.com');
UPDATE employee SET name = 'Mehmet' WHERE name = 'Yuri';
UPDATE employee SET email = 'crazyboy_58@patika.com' WHERE id= 45;
UPDATE employee SET id = 58 WHERE id = 35;
UPDATE employee SET birthday = '1999-01-01' WHERE birthday = '2002-02-02';
DELETE FROM employee WHERE id = 9;
DELETE FROM employee WHERE name = 'Terese';
DELETE FROM employee WHERE birthday = '1984-01-05';
DELETE FROM employee WHERE email = 'hmarsdens@reverbnation.com';
DELETE FROM employee WHERE name = 'Halimeda';

SELECT country, city FROM city INNER JOIN country ON city.country_id = country.country_id;
SELECT  first_name, last_name, payment_id FROM customer INNER JOIN payment ON customer.customer_id = payment.customer_id;
SELECT  first_name, last_name, rental_id FROM customer INNER JOIN rental ON customer.customer_id = rental.customer_id;

SELECT city, country FROM city LEFT JOIN country ON city.country_id = country.country_id;
SELECT payment.payment_id, customer.first_name, customer.last_name FROM customer RIGHT JOIN payment ON payment.customer_id = customer.customer_id;
SELECT customer.first_name, customer.last_name, rental.rental_id FROM customer FULL JOIN rental ON customer.customer_id = rental.customer_id;

SELECT first_name FROM actor
UNION 
SELECT first_name FROM customer
ORDER BY first_name;

SELECT first_name FROM actor
INTERSECT
SELECT first_name FROM customer
ORDER BY first_name;

SELECT first_name FROM actor
EXCEPT
SELECT first_name FROM customer
ORDER BY first_name;

SELECT first_name FROM actor
UNION ALL
SELECT first_name FROM customer
ORDER BY first_name;

SELECT first_name FROM actor
INTERSECT ALL
SELECT first_name FROM customer
ORDER BY first_name;

SELECT first_name FROM actor
EXCEPT ALL
SELECT first_name FROM customer
ORDER BY first_name;


SELECT COUNT(*) FROM film WHERE length > (SELECT AVG(length) FROM film);
SELECT COUNT(*) FROM film WHERE rental_rate = (SELECT MAX(rental_rate) FROM film);
SELECT title FROM film WHERE rental_rate = (SELECT MIN(rental_rate) FROM film) AND replacement_cost  = (SELECT MIN(replacement_cost) FROM film);
SELECT payment.customer_id, customer.first_name, customer.last_name,  COUNT(payment.customer_id) FROM payment JOIN customer ON customer.customer_id = payment.customer_id
GROUP BY customer.first_name, customer.last_name, payment.customer_id ORDER BY COUNT(payment.customer_id) DESC;


